{"version":3,"sources":["serviceWorker.ts","util/useTyping.ts","util/useInterval.ts","text/Phrase.tsx","text/Keyword.tsx","text/Paragraph.tsx","util/arrayEq.ts","containers/Prompt.tsx","Chapter.tsx","containers/Frame.tsx","containers/Wordbank.tsx","App.tsx","Preload.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","DefaultDelay","useTyping","text","onFinish","fast","arguments","length","undefined","_React$useState","React","_React$useState2","Object","slicedToArray","renderText","setRenderText","_React$useState3","_React$useState4","delay","setDelay","_React$useState5","_React$useState6","finished","setFinished","callback","savedCallback","useRef","savedId","useEffect","current","setInterval","clearInterval","useInterval","stop","nextText","slice","Phrase","props","_useTyping","react","className","Keyword","consumed","setConsumed","KeywordDraggable","assign","key","_dnd$useDrag","dnd","useDrag","item","type","id","source","canDrag","end","_","monitor","didDrop","onConsumed","_dnd$useDrag2","dragRef","ref","Paragraph","_ref","texts","textIndex","setTextIndex","progress","textsLength","map","Comp","i","arrayEquals","left","right","initialState","reducer","state","action","words","chapterName","objectSpread","defineProperty","concat","word","filter","Prompt","solutions","onAccept","uselessOnFinish","_React$useReducer","_React$useReducer2","dispatch","_dnd$useDrop","useDrop","accept","canDrop","collect","hovering","isOver","drop","target","_dnd$useDrop2","collectionProps","dropRef","solutionNextChapter","solution","answer","next","onAcceptIfSolved","text_Keyword","onClick","paragraph","text_Paragraph","Chapter","chapter","onNavigate","noop","processedStory","body","flatMap","line","idx","phrases","split","text_Phrase","name","containers_Prompt","Frame","memo","react_default","a","createElement","children","page","perPage","pageCount","Math","floor","pc","newWords","toConsumableArray","splice","max","min","Wordbank","useCallback","useReducer","currentPageCount","prevPage","nextPage","story","App","useState","start","beforeName","chapterGraph","setChapterGraph","chapterPointer","setChapterPointer","_React$useState7","showHelp","setShowHelp","currentChapter","canGoBefore","pushNewChapter","nextUp","newChapterGraph","setPlayBefore","setTimeout","audioRef","pause","load","play","goBefore","onHelp","onCloseHelp","_React$useState8","_React$useState9","playBefore","src","loop","autoPlay","containers_Frame","keys","style","display","flexDirection","height","src_Chapter","chapters","containers_Wordbank","Preload","showGame","setShowGame","sg","src_App_0","ReactDOM","render","cjs","backend","HTML5Backend","src_Preload_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d443a13c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport useInterval from \"../util/useInterval\";\n\nexport const DefaultDelay = 25;\n\nexport default function useTyping(\n  text: string,\n  onFinish: () => void,\n  fast = false,\n): [string] {\n  const [renderText, setRenderText] = React.useState(\"\");\n  const [delay, setDelay] = React.useState(DefaultDelay);\n  const [finished, setFinished] = React.useState(false);\n\n  useInterval(stop => {\n    if (renderText === text && !finished) {\n      stop();\n      onFinish();\n      setFinished(true);\n    }\n\n    // if we made it longer for effect, set it right back next time\n    if (delay > DefaultDelay) {\n      setDelay(DefaultDelay);\n    }\n\n    const nextText = text.slice(0, renderText.length + 1);\n    if (nextText[nextText.length - 1] === \".\") {\n      setDelay(DefaultDelay * 20);\n    }\n\n    if (nextText[nextText.length - 1] === \"?\") {\n      setDelay(DefaultDelay * 20);\n    }\n\n    if (nextText[nextText.length - 1] === \",\") {\n      setDelay(DefaultDelay * 10);\n    }\n\n    setRenderText(text.slice(0, renderText.length + 1));\n  }, fast ? 0 : delay /* Math.round(delay - 10 + 20 * Math.random()) */);\n\n  return [renderText];\n}\n","import { useEffect, useRef } from \"react\";\n\ntype IntervalCallback = (stop: () => void) => void;\n\nexport default function useInterval(callback: IntervalCallback, delay: number) {\n  const savedCallback = useRef<IntervalCallback>();\n  const savedId = useRef<NodeJS.Timeout>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current && savedId.current) {\n        savedCallback.current(() => clearInterval(savedId.current!));\n      }\n    }\n\n    if (delay !== null) {\n      savedId.current = setInterval(tick, delay);\n      return () => clearInterval(savedId.current!);\n    }\n  }, [delay]);\n}\n","import * as React from \"react\";\nimport useTyping from \"../util/useTyping\";\nimport \"./Phrase.css\";\nimport { Finishable } from \"./Text\";\n\ninterface PhraseProps extends Finishable {\n  readonly text: string;\n  readonly fast?: boolean;\n}\n\nconst Phrase: React.FC<PhraseProps> = React.memo(props => {\n  const [renderText] = useTyping(props.text, props.onFinish, props.fast);\n\n  return <span className=\"Phrase\">{renderText}</span>;\n});\n\nexport default Phrase;\n","import { __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ as dnd } from \"react-dnd\";\nimport * as React from \"react\";\nimport useTyping from \"../util/useTyping\";\nimport { Finishable } from \"./Text\";\nimport \"./Keyword.css\";\n\ninterface KeywordProps extends Finishable {\n  readonly text: string;\n  readonly location: \"story\" | \"puzzle\" | \"wordbank\";\n  readonly fast?: boolean;\n\n  readonly onConsumed?: (consumedText: string) => void;\n}\n\ninterface KeywordDraggableProps extends KeywordProps {\n  readonly renderText: string;\n  readonly consumed: boolean;\n  readonly setConsumed: (arg: boolean) => void;\n}\n\nexport interface KeywordDragProps {\n  readonly type: \"keyword\";\n  readonly id: string;\n  readonly source: \"story\" | \"puzzle\" | \"wordbank\";\n}\n\nconst Keyword: React.FC<KeywordProps> = React.memo(props => {\n  const [renderText] = useTyping(props.text, props.onFinish, props.fast);\n  const [consumed, setConsumed] = React.useState(false);\n\n  return (\n    <KeywordDraggable\n      {...props}\n      // react-dnd-hooks don't really work yet\n      // this makes them update according to props...\n      key={props.text + consumed}\n      consumed={consumed}\n      setConsumed={setConsumed}\n      renderText={renderText}\n    />\n  );\n});\n\n// useDrag won't update canDrag via state, so we need a child component to cause update via props\nconst KeywordDraggable: React.FC<KeywordDraggableProps> = React.memo(props => {\n  const [_, dragRef] = dnd.useDrag({\n    item: {\n      type: \"keyword\",\n      id: props.text,\n      source: props.location\n    } as KeywordDragProps,\n    canDrag: !props.consumed,\n    end: (_, monitor) => {\n      if (monitor.didDrop()) {\n        props.setConsumed(true);\n        if (props.onConsumed) {\n          props.onConsumed(props.text);\n        }\n      }\n    }\n  });\n\n  return (\n    <span\n      className={\"Keyword\" + (props.consumed ? \" consumed\" : \"\")}\n      ref={dragRef}\n    >\n      {props.renderText}\n    </span>\n  );\n});\n\nexport default Keyword;\n","import * as React from \"react\";\nimport { Finishable } from \"./Text\";\nimport \"./Paragraph.css\";\n\ninterface ParagraphProps extends Finishable {\n  readonly texts: Array<React.ComponentType<Finishable>>;\n  readonly fast?: boolean;\n\n  onFinish(): void;\n}\n\nconst Paragraph: React.FC<ParagraphProps> = React.memo(\n  ({ fast, texts, onFinish }) => {\n    const [textIndex, setTextIndex] = React.useState(0);\n    const [finished, setFinished] = React.useState(false);\n\n    const progress = React.useCallback(\n      () => !finished && setTextIndex(textIndex + 1),\n      [finished, textIndex, setTextIndex]\n    );\n\n    const textsLength = texts.length;\n    React.useEffect(() => {\n      if (textIndex >= textsLength && !finished) {\n        onFinish();\n        setFinished(true);\n      }\n    }, [textIndex, finished, setFinished, textsLength, onFinish]);\n\n    return (\n      <div className=\"Paragraph\">\n        {texts.slice(0, fast ? texts.length : textIndex + 1).map((Comp, i) => (\n          <Comp key={i} onFinish={progress} />\n        ))}\n      </div>\n    );\n  }\n);\n\nexport default Paragraph;\n","export function arrayEquals(left: unknown[], right: unknown[]) {\n    if (left.length !== right.length) {\n        return false;\n    }\n\n    for (let i = 0; i < left.length; i ++) {\n        if (left[i] !== right[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}","import * as React from \"react\";\nimport \"./Prompt.css\";\nimport Keyword, { KeywordDragProps } from \"../text/Keyword\";\n\nimport { __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ as dnd } from \"react-dnd\";\nimport { arrayEquals } from \"../util/arrayEq\";\nimport { Solution } from \"../Story\";\n\n// state\n\nconst initialState = {};\n\ntype State = { [chapterName: string]: string[] };\ntype Action =\n  | { type: \"addWord\"; chapterName: string; word: string }\n  | { type: \"removeWord\"; chapterName: string; word: string };\n\nfunction reducer(state: State, action: Action) {\n  const words: string[] = state[action.chapterName] || [];\n\n  switch (action.type) {\n    case \"addWord\":\n      return {\n        ...state,\n        [action.chapterName]: words.concat(action.word)\n      };\n    case \"removeWord\":\n      return {\n        ...state,\n        // technically bug if you have two of the same word\n        [action.chapterName]: words.filter(word => word !== action.word)\n      };\n    default:\n      return state;\n  }\n}\n\n// component\ninterface PromptProps {\n  readonly chapterName: string;\n  readonly solutions: Solution[];\n  readonly onAccept: (nextChapterName: string) => void;\n}\n\nconst Prompt: React.FC<PromptProps> = React.memo(({ chapterName, solutions, onAccept }) => {\n  const uselessOnFinish = React.useCallback(() => void 0, []);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const words = state[chapterName] || [];\n\n  const [collectionProps, dropRef] = dnd.useDrop<\n    KeywordDragProps,\n    { target: \"puzzle\" },\n    { hovering: boolean, canDrop: boolean }\n  >({\n    accept: \"keyword\",\n    canDrop: item => {\n      return item.source !== \"puzzle\";\n    },\n    collect: monitor => ({\n      canDrop: monitor.canDrop(),\n      hovering: monitor.isOver()\n    }),\n    drop: item => {\n      dispatch({ type: \"addWord\", chapterName, word: item.id });\n      return { target: \"puzzle\" };\n    }\n  });\n\n  const onConsumed = React.useCallback(\n    (word: string) => dispatch({ type: \"removeWord\", chapterName, word }),\n    [chapterName, dispatch]\n  );\n\n  const solutionNextChapter = React.useMemo(\n    () => {\n      for (let i = 0; i < solutions.length; i++) {\n        const solution = solutions[i];\n        if (arrayEquals(solution.answer, words)) {\n          return solution.next;\n        }\n      }\n      return undefined;\n    },\n    [solutions, words]\n  )\n\n  const onAcceptIfSolved = \n    React.useCallback(\n      () => solutionNextChapter && onAccept(solutionNextChapter), \n      [onAccept, solutionNextChapter]\n    );\n\n  return (\n    <div\n      className={\"Prompt\" + (collectionProps.hovering && collectionProps.canDrop ? \" hovering\" : \"\")}\n      ref={dropRef}\n    >\n      <span className=\"Symbol\">{\">\"}</span>\n      {words.map(word => (\n        <Keyword\n          key={word}\n          text={word}\n          location={\"puzzle\"}\n          onFinish={uselessOnFinish}\n          onConsumed={onConsumed}\n        />\n      ))}\n      <span \n        className={\"OK\" + (solutionNextChapter ? \" activated\" : \"\")}\n        onClick={onAcceptIfSolved}\n      >OK</span>\n    </div>\n  );\n});\n\nexport default Prompt;\n","import * as React from \"react\";\nimport { Chapter as ChapterData } from \"./Story\";\nimport { Finishable } from \"./text/Text\";\nimport Phrase from \"./text/Phrase\";\nimport Keyword from \"./text/Keyword\";\nimport Paragraph from \"./text/Paragraph\";\nimport Prompt from \"./containers/Prompt\";\n\ninterface ChapterProps {\n    readonly chapter: ChapterData;\n\n    readonly onNavigate: (chapterName: string) => void;\n}\n\nconst phrase = (text: string, fast?: boolean) => (props: Finishable) => (\n    <Phrase text={text} fast={fast} onFinish={props.onFinish} />\n);\n\nconst keyword = (text: string, fast?: boolean) => (props: Finishable) => (\n    <Keyword text={text} fast={fast} location={\"story\"} onFinish={props.onFinish} />\n);\n\nconst paragraph = (texts: Array<React.ComponentType<Finishable>>, key: string | number, fast?: boolean) => (\n    props: Finishable\n) => <Paragraph texts={texts} fast={fast} onFinish={props.onFinish} />;\n\nconst Chapter: React.FC<ChapterProps> = React.memo(({ chapter, onNavigate }) => {\n    const noop = React.useCallback(() => void 0, []);\n\n    const processedStory = React.useMemo(() => {\n        const body = chapter.body.flatMap((line, idx) => {\n            // split to get the keywords in [brackets]\n            // all odd numbered indexes will be keywords\n            // means that brackets are not allowed in the story\n            const phrases = line.split(/[\\[\\]]/).map((text, i) => {\n                return (i % 2 === 1 ? keyword : phrase)(text, chapter.fast);\n            })\n\n            return chapter.fast ? phrases : [paragraph(phrases, idx, chapter.fast)];\n        });\n\n        return paragraph(body, chapter.name, chapter.fast)({ onFinish: noop });\n    }, [chapter, noop])\n\n    return <>\n        {processedStory}\n        <Prompt \n            chapterName={chapter.name}\n            solutions={chapter.solutions} \n            onAccept={onNavigate} \n        />\n    </>;\n});\n\nexport default Chapter;","import React from \"react\";\nimport \"./Frame.css\";\n\nconst Frame: React.FC = React.memo(props => {\n  return <div className=\"Frame\">{props.children}</div>;\n});\n\nexport default Frame;\n","import React from \"react\";\nimport \"./Wordbank.css\";\nimport Keyword, { KeywordDragProps } from \"../text/Keyword\";\n\nimport { __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ as dnd } from \"react-dnd\";\n\n// state\n\ntype State = typeof initialState;\nconst initialState = {\n  words: [\"set\", \"close\"] as string[],\n  page: 0\n};\n\ntype Action =\n  | { type: \"addWord\"; word: string }\n  | { type: \"removeWord\"; word: string }\n  | { type: \"prevPage\" }\n  | { type: \"nextPage\" }\n\nconst perPage = 14;\nconst pageCount = (state: State) => Math.floor(state.words.length / perPage) + 1;\n\nfunction reducer(state: State, action: Action) {\n  const pc = pageCount(state);\n\n  switch (action.type) {\n    case \"addWord\":\n      const newWords = [...state.words];\n      newWords.splice(state.page * perPage + perPage - 1, 0, action.word);\n      return {\n        ...state,\n        // always put it at the bottom of the current page\n        words: newWords\n      };\n    case \"removeWord\":\n      return {\n        ...state,\n        // technically bug if you have two of the same word\n        words: state.words.filter(word => word !== action.word)\n      };\n    case \"prevPage\":\n      return {\n        ...state,\n        page: Math.max(0, state.page - 1)\n      }\n    case \"nextPage\":\n      return {\n        ...state,\n        page: Math.min(pc - 1, state.page + 1)\n      };\n    default:\n      return state;\n  }\n}\n\n// component\ninterface WordbankProps { }\n\nconst Wordbank: React.FC<WordbankProps> = React.memo(() => {\n  const uselessOnFinish = React.useCallback(() => void 0, []);\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const [collectionProps, dropRef] = dnd.useDrop<\n    KeywordDragProps,\n    { target: \"wordbank\" },\n    { hovering: boolean, canDrop: boolean }\n  >({\n    accept: \"keyword\",\n    canDrop: item => {\n      return item.source !== \"wordbank\";\n    },\n    collect: monitor => ({\n      canDrop: monitor.canDrop(),\n      hovering: monitor.isOver()\n    }),\n    drop: item => {\n      // TODO don't allow if keyword has been consumed\n      dispatch({ type: \"addWord\", word: item.id });\n      return { target: \"wordbank\" };\n    }\n  });\n\n  const onConsumed = React.useCallback(\n    (word: string) => dispatch({ type: \"removeWord\", word }),\n    [dispatch]\n  );\n\n  const currentPageCount = pageCount(state);\n\n  const prevPage = React.useCallback(() => dispatch({ type: \"prevPage\" }), [dispatch]);\n  const nextPage = React.useCallback(() => dispatch({ type: \"nextPage\" }), [dispatch]);\n\n  return (\n    <div\n      className={\"Wordbank\" + (collectionProps.hovering && collectionProps.canDrop ? \" hovering\" : \"\")}\n      ref={dropRef}\n    >\n      {state.words.slice(perPage * state.page, perPage * state.page + perPage).map(word => (\n        <Keyword\n          key={word}\n          text={word}\n          location={\"wordbank\"}\n          onFinish={uselessOnFinish}\n          onConsumed={onConsumed}\n        />\n      ))}\n      <div className={\"Pagination\" + (currentPageCount > 1 ? \" activated\" : \"\")}>\n        <span \n          className={\"Previous\" + (state.page > 0 ? \" activated\" : \"\")}\n          onClick={prevPage}\n        >{\"<\"}</span>\n        <span \n          className={\"Next\" + (state.page < currentPageCount - 1 ? \" activated\" : \"\")}\n          onClick={nextPage}\n        >{\">\"}</span>\n      </div>\n    </div>\n  );\n});\n\nexport default Wordbank;\n","import React from \"react\";\nimport \"./App.css\";\nimport Chapter from \"./Chapter\";\nimport Frame from \"./containers/Frame\";\nimport Wordbank from \"./containers/Wordbank\";\nimport { loadStory } from \"./Story\";\n\nconst story = loadStory();\n\ninterface ChapterNode {\n  readonly chapterName: string;\n  readonly beforeName: string | null;\n}\n\ninterface ChapterGraph {\n  [chapterName: string]: ChapterNode;\n}\n\nconst App: React.FC = () => {\n  const [chapterGraph, setChapterGraph] = React.useState<ChapterGraph>({\n    [story.start]: {\n      chapterName: story.start,\n      beforeName: null\n    },\n  })\n\n  const [chapterPointer, setChapterPointer] = React.useState(story.start);\n\n  const [showHelp, setShowHelp] = React.useState(false);\n\n  const currentChapter = chapterGraph[chapterPointer];\n  const canGoBefore = currentChapter.beforeName !== null;\n\n  const pushNewChapter = React.useCallback((chapterName: string) => {\n    let nextUp = chapterGraph[chapterName];\n    if (!nextUp) {\n      nextUp = {\n        chapterName,\n        beforeName: chapterPointer\n      };\n    } else {\n      nextUp = {\n        ...nextUp,\n        beforeName: chapterPointer\n      };\n    }\n\n    const newChapterGraph = {\n      ...chapterGraph,\n      [chapterName]: nextUp\n    };\n\n    setChapterGraph(newChapterGraph);\n    setChapterPointer(chapterName);\n\n    if (chapterName === \"the-details\") {\n      setPlayBefore(true);\n      setTimeout(() => {\n        audioRef.current.pause();\n        audioRef.current.load();\n        audioRef.current.play();\n      });\n    }\n  }, [chapterPointer, setChapterPointer, chapterGraph, setChapterGraph]);\n\n  const goBefore = React.useCallback(() => {\n    if (!canGoBefore) {\n      return;\n    }\n\n    if (currentChapter.chapterName === \"the-details\") {\n      setPlayBefore(false);\n      setTimeout(() => {\n        audioRef.current.pause();\n        audioRef.current.load();\n        audioRef.current.play();\n      });\n    }\n\n    setChapterPointer(currentChapter.beforeName!);\n  }, [canGoBefore, currentChapter, setChapterPointer])\n\n  const onHelp = React.useCallback(() => {\n    setShowHelp(true);\n  }, [setShowHelp]);\n\n  const onCloseHelp = React.useCallback(() => {\n    setShowHelp(false);\n  }, [setShowHelp]);\n\n  const [playBefore, setPlayBefore] = React.useState(false);\n  const audioRef = React.useRef<HTMLAudioElement>(undefined!);\n\n  return (\n    <div className=\"App\">\n      <audio ref={audioRef} src={playBefore ? \"before.mp3\" : \"timeremaining.mp3\"} loop autoPlay />\n      <Frame>\n        <div className=\"Navigation\">\n          <span \n            className={\"Before\" + (canGoBefore ? \" activated\" : \"\")}\n            onClick={goBefore}\n          >\n            {\"< BEFORE\"}\n          </span>\n          <span\n            className={\"HelpButton\"}\n            onClick={onHelp}\n          >\n            {\"?\"}\n          </span>\n        </div>\n        { /* We render all chapters in queue to keep them in memory */ }\n        {(Object.keys(chapterGraph).map(chapterName => (\n          <div key={chapterName} style={{ \n            display: chapterName === currentChapter.chapterName ? \"flex\" : \"none\",\n            flexDirection: \"column\",\n            height: \"100%\", \n          }}>\n            <Chapter \n              key={chapterName}\n              chapter={story.chapters[chapterName]} \n              onNavigate={pushNewChapter}\n            />\n          </div>\n        )))}\n        {showHelp && (<div className=\"Help\">\n          <p>welcome into <em>invertebrae</em>.</p>\n          <p>while life may progress along with currency, you as an observer do not.</p>\n          <p>to the right stores knowledge, and below submits answers.</p> \n          <p>the future does not cement the past.</p>\n          <p>good luck.</p>\n          <span \n            className=\"CloseHelp\"   \n            onClick={onCloseHelp}\n          >I'LL TRY</span>\n        </div>)}\n      </Frame>\n      <Wordbank />\n    </div>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport App from \"./App\";\nimport \"./Preload.css\";\n\nconst Preload: React.FC = () => {\n    const [showGame, setShowGame] = React.useState(false);\n\n    const sg = React.useCallback(() => setShowGame(true), [setShowGame]);\n\n    if (showGame) {\n        return <App />;\n    } {\n        return <div className=\"Preload\" onClick={sg}>\n            <span className=\"Message\">\n                Click anywhere to begin.\n            </span>\n        </div>\n    }\n};\n\nexport default Preload;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport Preload from './Preload';\n\nReactDOM.render(\n    <DragDropContextProvider backend={HTML5Backend}>\n        <Preload />\n    </DragDropContextProvider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}